base_images:
  cli:
    name: "4.14"
    namespace: ocp
    tag: cli
  operator-sdk:
    name: "4.14"
    namespace: origin
    tag: operator-sdk
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.21
images:
- context_dir: .
  dockerfile_path: Dockerfile
  to: securesign-operator
- dockerfile_literal: |
    FROM src
    COPY oc /usr/bin/oc
    RUN ln -s /usr/bin/oc /usr/bin/kubectl
  from: src
  inputs:
    cli:
      paths:
      - destination_dir: .
        source_path: /usr/bin/oc
  to: src-oc
operator:
  bundles:
  - as: securesign-bundle
    context_dir: .
    dockerfile_path: bundle.Dockerfile
  substitutions:
  - pullspec: registry.redhat.io/rhtas-tech-preview/sigstore-rhel9-operator.*
    with: pipeline:securesign-operator
releases:
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.14"
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: tas-operator-e2e
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 3h0m0s
    version: "4.14"
  steps:
    test:
    - as: install
      cli: latest
      commands: |
        set -x
        oc create ns openshift-rhtas-operator
        operator-sdk run bundle -n openshift-rhtas-operator "$OO_BUNDLE" --timeout 5m0s
        oc get deployments -n openshift-rhtas-operator -o yaml
        oc wait --for condition=Available -n openshift-rhtas-operator deployment rhtas-operator-controller-manager
      dependencies:
      - env: OO_BUNDLE
        name: securesign-bundle
      from: operator-sdk
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    - as: test
      cli: latest
      commands: |
        ./ci/openshift/tas-keycloak-install.sh
        set -x
        go install github.com/sigstore/cosign/v2/cmd/cosign@v2.2.2
        OIDC_ISSUER=https://$(oc get route keycloak -n keycloak-system | tail -n 1 | awk '{print $2}')/auth/realms/sigstore
        sed -i "s|https://your-oidc-issuer-url|$OIDC_ISSUER|g" config/samples/rhtas_v1alpha1_securesign.yaml
        sed -i 's|ClientID: "trusted-artifact-signer"|ClientID: "sigstore"|g' config/samples/rhtas_v1alpha1_securesign.yaml
        oc create ns securesign
        oc apply -f config/samples/rhtas_v1alpha1_securesign.yaml -n securesign
        for i in trillian-db trillian-logserver trillian-logsigner fulcio-server; do until [ ! -z "$(oc get deployment $i -n securesign 2>/dev/null)" ]; do echo "Waiting for $i deployment to be created. Pods in securesign namespace:"; oc get pods -n securesign; sleep 3; done; done
        oc wait --for=condition=available deployment/trillian-db -n securesign --timeout=60s
        oc wait --for=condition=available deployment/trillian-logserver -n securesign --timeout=60s
        oc wait --for=condition=available deployment/trillian-logsigner -n securesign --timeout=60s
        oc wait --for=condition=available deployment/fulcio-server -n securesign --timeout=60s
        oc set env -n securesign deployment/fulcio-server SSL_CERT_DIR=/var/run/fulcio
        for i in tuf ctlog rekor-redis rekor-server; do until [ ! -z "$(oc get deployment $i -n securesign 2>/dev/null)" ]; do echo "Waiting for $i deployment to be created. Pods in securesign namespace:"; oc get pods -n securesign; sleep 3; done; done
        oc wait --for=condition=available deployment/tuf -n securesign --timeout=60s
        oc wait --for=condition=available deployment/ctlog -n securesign --timeout=60s
        oc wait --for=condition=available deployment/rekor-redis -n securesign --timeout=60s
        oc wait --for=condition=available deployment/rekor-server -n securesign --timeout=60s
        oc apply -f ci/openshift/job.yaml -n default
        oc wait --for=condition=complete job/trusted-artifact-signer-test-sign-verify --timeout=5m -n default
        FULCIO_URL=https://$(oc get route  -n securesign -l app.kubernetes.io/component=fulcio | tail -n 1 | awk '{print $2}')
        REKOR_URL=https://$(oc get route  -n securesign -l app.kubernetes.io/component=rekor-server | tail -n 1 | awk '{print $2}')
        TUF_URL=https://$(oc get route  -n securesign -l app.kubernetes.io/component=tuf | tail -n 1 | awk '{print $2}')
        curl -o /tmp/job.yaml https://raw.githubusercontent.com/cooktheryan/hello-world/main/job.yaml
        sed -i "s|fulcio-server-url|$FULCIO_URL|g" /tmp/job.yaml
        sed -i "s|rekor-server-url|$REKOR_URL|g" /tmp/job.yaml
        sed -i "s|tuf-url|$TUF_URL|g" /tmp/job.yaml
        sed -i "s|oidc-issuer-url|$OIDC_ISSUER|g" /tmp/job.yaml
        oc apply -f /tmp/job.yaml -n default
        oc logs -n openshift-rhtas-operator deployment/rhtas-operator-controller-manager
      from: src-oc
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
zz_generated_metadata:
  branch: main
  org: securesign
  repo: secure-sign-operator
